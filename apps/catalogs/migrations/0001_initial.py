# Generated by Django 2.2.6 on 2021-04-11 10:08

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import easy_thumbnails.fields
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Фамилия')),
                ('middle_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Отчество')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Адрес электронной почты')),
                ('avatar', easy_thumbnails.fields.ThumbnailerImageField(blank=True, null=True, upload_to='avatars/', verbose_name='Аватарка')),
                ('password_change_date', models.DateTimeField(default=datetime.datetime(1970, 1, 1, 0, 0), verbose_name='Дата изменения пароля')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'db_table': 'auth_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Catalog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pet_type', models.CharField(choices=[('cat', 'Кошка'), ('dog', 'Собака')], default='cat', max_length=30, verbose_name='Вид питомца')),
                ('breed', models.CharField(default='', max_length=255, verbose_name='Порода')),
                ('short_description', models.CharField(default='', max_length=2000, verbose_name='Краткое описание')),
                ('origin', models.CharField(default='', max_length=2000, verbose_name='Происхождение')),
                ('image', easy_thumbnails.fields.ThumbnailerImageField(blank=True, null=True, upload_to='badges/', verbose_name='Логотип')),
                ('allergenicity', models.PositiveIntegerField(choices=[(1, 'Очень низкая'), (2, 'Низкая'), (3, 'Средняя'), (4, 'Высокая'), (5, 'Очень высокая')], default=3, verbose_name='Аллергенность')),
                ('molt', models.PositiveIntegerField(choices=[(1, 'Очень низкая'), (2, 'Низкая'), (3, 'Средняя'), (4, 'Высокая'), (5, 'Очень высокая')], default=3, verbose_name='Линька')),
                ('intelligence', models.PositiveIntegerField(choices=[(1, 'Очень низкий'), (2, 'Низкий'), (3, 'Средний'), (4, 'Высокий'), (5, 'Очень высокий')], default=3, verbose_name='Интеллект')),
                ('sociability', models.PositiveIntegerField(choices=[(1, 'Очень низкая'), (2, 'Низкая'), (3, 'Средняя'), (4, 'Высокая'), (5, 'Очень высокая')], default=3, verbose_name='Общительность')),
                ('need_for_care', models.PositiveIntegerField(choices=[(1, 'Очень низкая'), (2, 'Низкая'), (3, 'Средняя'), (4, 'Высокая'), (5, 'Очень высокая')], default=3, verbose_name='Потребность в уходе')),
                ('activity', models.PositiveIntegerField(choices=[(1, 'Очень низкая'), (2, 'Низкая'), (3, 'Средняя'), (4, 'Высокая'), (5, 'Очень высокая')], default=3, verbose_name='Активность')),
                ('friendliness', models.PositiveIntegerField(choices=[(1, 'Очень низкое'), (2, 'Низкое'), (3, 'Среднее'), (4, 'Высокое'), (5, 'Очень высокое')], default=3, verbose_name='Дружелюбие')),
                ('health', models.PositiveIntegerField(choices=[(1, 'Очень плохое'), (2, 'Плохое'), (3, 'Среднее'), (4, 'Хорошее'), (5, 'Очень хорошее')], default=3, verbose_name='Здоровье')),
                ('active', models.BooleanField(default=True, verbose_name='Статус активности')),
            ],
            options={
                'verbose_name': 'Каталог',
                'verbose_name_plural': 'Каталоги',
                'db_table': 'catalog',
            },
        ),
        migrations.CreateModel(
            name='HistoricalCatalog',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('pet_type', models.CharField(choices=[('cat', 'Кошка'), ('dog', 'Собака')], default='cat', max_length=30, verbose_name='Вид питомца')),
                ('breed', models.CharField(default='', max_length=255, verbose_name='Порода')),
                ('short_description', models.CharField(default='', max_length=2000, verbose_name='Краткое описание')),
                ('origin', models.CharField(default='', max_length=2000, verbose_name='Происхождение')),
                ('image', models.TextField(blank=True, max_length=100, null=True, verbose_name='Логотип')),
                ('allergenicity', models.PositiveIntegerField(choices=[(1, 'Очень низкая'), (2, 'Низкая'), (3, 'Средняя'), (4, 'Высокая'), (5, 'Очень высокая')], default=3, verbose_name='Аллергенность')),
                ('molt', models.PositiveIntegerField(choices=[(1, 'Очень низкая'), (2, 'Низкая'), (3, 'Средняя'), (4, 'Высокая'), (5, 'Очень высокая')], default=3, verbose_name='Линька')),
                ('intelligence', models.PositiveIntegerField(choices=[(1, 'Очень низкий'), (2, 'Низкий'), (3, 'Средний'), (4, 'Высокий'), (5, 'Очень высокий')], default=3, verbose_name='Интеллект')),
                ('sociability', models.PositiveIntegerField(choices=[(1, 'Очень низкая'), (2, 'Низкая'), (3, 'Средняя'), (4, 'Высокая'), (5, 'Очень высокая')], default=3, verbose_name='Общительность')),
                ('need_for_care', models.PositiveIntegerField(choices=[(1, 'Очень низкая'), (2, 'Низкая'), (3, 'Средняя'), (4, 'Высокая'), (5, 'Очень высокая')], default=3, verbose_name='Потребность в уходе')),
                ('activity', models.PositiveIntegerField(choices=[(1, 'Очень низкая'), (2, 'Низкая'), (3, 'Средняя'), (4, 'Высокая'), (5, 'Очень высокая')], default=3, verbose_name='Активность')),
                ('friendliness', models.PositiveIntegerField(choices=[(1, 'Очень низкое'), (2, 'Низкое'), (3, 'Среднее'), (4, 'Высокое'), (5, 'Очень высокое')], default=3, verbose_name='Дружелюбие')),
                ('health', models.PositiveIntegerField(choices=[(1, 'Очень плохое'), (2, 'Плохое'), (3, 'Среднее'), (4, 'Хорошее'), (5, 'Очень хорошее')], default=3, verbose_name='Здоровье')),
                ('active', models.BooleanField(default=True, verbose_name='Статус активности')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Каталог',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
